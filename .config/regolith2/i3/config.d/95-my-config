# -*- mode: conf -*-

# i3 bar copied from /usr/share/regolith/i3/config.d/70_bar with
# regolith-i3-i3xrocks installed. Not sure if there is an easier way to
# configure a bar across two separate files ...

set_from_resource $i3-wm.bar.position i3-wm.bar.position bottom
set_from_resource $i3-wm.bar.font i3-wm.bar.font monospace
set_from_resource $i3-wm.bar.separatorchar i3-wm.bar.separatorchar " "
set_from_resource $i3-wm.bar.trayoutput i3-wm.bar.trayoutput primary
set_from_resource $i3-wm.bar.stripworkspacenumbers i3-wm.bar.stripworkspacenumbers yes
set_from_resource $i3-wm.bar.mode i3-wm.bar.mode dock
set_from_resource $i3-wm.bar.workspace_min_width i3-wm.bar.workspace_min_width 36

# i3xrocks config file. Override this for a custom status bar generator.
set_from_resource $i3-wm.bar.status_command i3-wm.bar.status_command i3xrocks -u ~/.config/regolith2/i3xrocks/conf.d -d /usr/share/i3xrocks/conf.d

# The bar configuration
bar {
  position $i3-wm.bar.position
  mode $i3-wm.bar.mode
  font pango:$i3-wm.bar.font
  separator_symbol $i3-wm.bar.separatorchar
  status_command $i3-wm.bar.status_command
  tray_output $i3-wm.bar.trayoutput
  strip_workspace_numbers $i3-wm.bar.stripworkspacenumbers
  workspace_min_width $i3-wm.bar.workspace_min_width

  # Disable mouse on status bar
  bindsym button1 nop
  bindsym button4 nop
  bindsym button5 nop

  colors {
      background $i3-wm.bar.background.color
      statusline $i3-wm.bar.statusline.color
      separator  $i3-wm.bar.separator.color

#                        BORDER  BACKGROUND TEXT
      focused_workspace  $i3-wm.bar.workspace.focused.border.color      $i3-wm.bar.workspace.focused.background.color   $i3-wm.bar.workspace.focused.text.color
      active_workspace   $i3-wm.bar.workspace.active.border.color       $i3-wm.bar.workspace.active.background.color    $i3-wm.bar.workspace.active.text.color
      inactive_workspace $i3-wm.bar.workspace.inactive.border.color     $i3-wm.bar.workspace.inactive.background.color  $i3-wm.bar.workspace.inactive.text.color
      urgent_workspace   $i3-wm.bar.workspace.urgent.border.color       $i3-wm.bar.workspace.urgent.background.color    $i3-wm.bar.workspace.urgent.text.color
  }
}

# Add some applets to the system tray
# NetworkManager
exec --no-startup-id nm-applet
# Bluetooth
exec --no-startup-id blueman-applet

# Keyboard it could be a dconf thing
exec_always --no-startup-id setxkbmap -option "caps:escape" -layout us -variant altgr-intl

# Load dconf settings for system settings tweaks
exec_always --no-startup-id dconf load / < ~/.config/regolith2/dconf

# Turn off Caps Lock if enabled (for some reason connecting or deconnecting
# from screen enables CapsLock again)
exec_always --no-startup-id bash -c '[[ $(xset -q) =~ (Caps Lock: *on) ]] && xdotool key Caps_Lock'

# TODO turn off screen power management, probably better to use dconf settings for this ...
exec_always --no-startup-id xset -dpms
# Control-AltGr-v clipboard manager (diodon)
bindsym Control+Mod5+registered exec diodon

# kill focused window (AltGr Control q), on purpose different from other
# shortcuts to avoid typing it by mistake
# A bit complicated with my altgr variant keyboard, got this from:
# https://github.com/i3/i3/issues/2717#issuecomment-289753285 
bindsym Mod5+Control+adiaeresis kill

bindsym $mod+m [class="Emacs"] focus
bindsym $mod+i [class="firefox"] focus
bindsym $mod+a [urgent=latest] focus

# Binding mode for useful shortcuts
set $mode_launcher Launch: [c]apture calen[d]ar c[l]ock-goto [o]rg-rifle  
bindsym $mod+o mode "$mode_launcher"
mode "$mode_launcher" {
        bindsym c exec emacsclient -e '(my-org-capture-in-new-full-frame)'; mode "default"
        bindsym d exec emacsclient -c -e '(cfw:open-org-calendar)'; mode "default"
        bindsym l exec emacsclient -e "(progn (select-frame-set-input-focus (selected-frame)) (org-clock-goto))" \
            && i3-msg "[urgent=latest] focus"; \
            mode "default"
        bindsym o exec emacsclient -c -e '(progn (switch-to-buffer "*scratch*") (my-helm-org-rifle))';\
            mode "default"
        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

set $settings_mode_launcher Settings: [b]luetooth [d]isplay [s]ettings [w]ifi
bindsym $mod+s mode "$settings_mode_launcher"
mode "$settings_mode_launcher" {
        bindsym b exec regolith-control-center bluetooth --class floating_window; mode "default"
        bindsym d exec regolith-control-center display --class floating_window; mode "default"
        bindsym s exec regolith-control-center --class floating_window; mode "default"
        bindsym w exec regolith-control-center wifi --class floating_window; mode "default"
        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# print screen
bindsym Print exec --no-startup-id flameshot gui

# Go back to previous workspace with same number
workspace_auto_back_and_forth yes

# toggle tiling / floating
bindsym $mod+q floating toggle

# change focus between tiling / floating windows
bindsym $mod+Shift+q focus mode_toggle

# Make clearer which window is focused
default_border pixel 2

# Focus follow mouse
focus_follows_mouse yes